<?xml version="1.0" encoding="UTF-8"?>
<x:description  xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="generate_report.xsl">
    <x:variable name="findingSummaryTable" select="/">
        <findingEntry Ref="" status="unresolved" findingId="finding3">
            <findingNumber>SID-003</findingNumber>
            <findingType>Test</findingType>
            <findingDescription>Description contents</findingDescription>
            <findingThreatLevel>High</findingThreatLevel>
        </findingEntry>
        <findingEntry Ref="" status="none" findingId="finding1">
            <findingNumber>SID-001</findingNumber>
            <findingType>Test</findingType>
            <findingDescription>This is the desc</findingDescription>
            <findingThreatLevel>Elevated</findingThreatLevel>
        </findingEntry>
        <findingEntry Ref="" status="unresolved" findingId="finding2">
            <findingNumber>SID-002</findingNumber>
            <findingType>Test</findingType>
            <findingDescription>Description contents</findingDescription>
            <findingThreatLevel>Moderate</findingThreatLevel>
        </findingEntry>
    </x:variable>
    
    <x:scenario
        label="Scenario for testing template with match 'generate_targets">
        <x:context href="../source/report.xml" select="/pentest_report/section[1]/section[2]/generate_targets[1]"/>
        <x:expect
            label="Targets 1 and 2 generated as list">
            <fo:list-block provisional-distance-between-starts="0.7cm" provisional-label-separation="2mm" padding-top="0.2cm" padding-bottom="0.5cm">
                <fo:list-item line-height="6.5mm" keep-together.within-page="always">
                    <fo:list-item-label end-indent="label-end()">
                        <fo:block>
                            <fo:inline>•</fo:inline>
                        </fo:block>
                    </fo:list-item-label>
                    <fo:list-item-body start-indent="body-start()">
                        <fo:block>Target 1</fo:block>
                    </fo:list-item-body>
                </fo:list-item>
                <fo:list-item line-height="6.5mm" keep-together.within-page="always">
                    <fo:list-item-label end-indent="label-end()">
                        <fo:block>
                            <fo:inline>•</fo:inline>
                        </fo:block>
                    </fo:list-item-label>
                    <fo:list-item-body start-indent="body-start()">
                        <fo:block>Target 2</fo:block>
                    </fo:list-item-body>
                </fo:list-item>
            </fo:list-block>
        </x:expect>
    </x:scenario>
    <x:scenario
        label="Scenario for testing function targets">
        <x:context href="../source/report.xml" select="/"/>
        <x:call
            template="targets">
        </x:call>
        <x:expect
            label="Targets 1 and 2 generated as list">
            <fo:list-block provisional-distance-between-starts="0.7cm" provisional-label-separation="2mm" padding-top="0.2cm" padding-bottom="0.5cm">
                <fo:list-item line-height="6.5mm" keep-together.within-page="always">
                    <fo:list-item-label end-indent="label-end()">
                        <fo:block>
                            <fo:inline>•</fo:inline>
                        </fo:block>
                    </fo:list-item-label>
                    <fo:list-item-body start-indent="body-start()">
                        <fo:block>Target 1</fo:block>
                    </fo:list-item-body>
                </fo:list-item>
                <fo:list-item line-height="6.5mm" keep-together.within-page="always">
                    <fo:list-item-label end-indent="label-end()">
                        <fo:block>
                            <fo:inline>•</fo:inline>
                        </fo:block>
                    </fo:list-item-label>
                    <fo:list-item-body start-indent="body-start()">
                        <fo:block>Target 2</fo:block>
                    </fo:list-item-body>
                </fo:list-item>
            </fo:list-block>
        </x:expect>
    </x:scenario>
    
    <x:scenario
        pending="TODO test in contract context"
        label="Scenario for testing template with match 'generate_teammembers">
        <x:context href="../source/report.xml"/>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    <x:scenario
        pending="TODO test in contract context"
        label="Scenario for testing function teammembers">
        <x:call
            template="teammembers"/>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    
    
    <x:scenario
        label="Scenario for testing template with match 'generate_findings">
        <x:context href="../source/report.xml" select="//generate_findings"/>
        <!-- we can test the matching template since it uses the $findingSummaryTable var defined in the beginning -->
        <x:expect label="resulting table should have 4 rows (1 header, 3 finding rows)"
            test="/fo:block[1]/fo:table[1]/fo:table-body[1]/fo:table-row => count() = 4"/>
        <x:expect label="first finding in table should be finding 3"
            test="/fo:block[1]/fo:table[1]/fo:table-body[1]/fo:table-row[2]/fo:table-cell[1]/fo:block[1]/fo:basic-link[1]/text() = 'SID-003'"/>
        <x:expect label="second finding in table should link to 'finding1'"
            test="/fo:block[1]/fo:table[1]/fo:table-body[1]/fo:table-row[3]/fo:table-cell[1]/fo:block[1]/fo:basic-link[1]/@internal-destination/string()" select="'finding1'"/>
    </x:scenario>
    
    
    <x:scenario pending="Implicitly tested while matching 'generate_findings'"
        label="Scenario for testing function findingsSummaryContent">
        <x:call
            template="findingsSummaryContent"/>
        <x:expect
            label="Not yet implemented">Test</x:expect>
    </x:scenario>
    
    <x:scenario
        label="Scenario for testing template with match 'generate_recommendations">
        <x:context href="../source/report.xml" select="//generate_recommendations"/>
        <x:expect label="resulting table should have 4 rows (1 header, 3 finding rows)"
            test="/fo:block[1]/fo:table[1]/fo:table-body[1]/fo:table-row => count() = 4"/>
        <x:expect label="first finding in table should be finding 1 (recs are sorted on number not threatLevel)"
            test="/fo:block[1]/fo:table[1]/fo:table-body[1]/fo:table-row[2]/fo:table-cell[1]/fo:block[1]/fo:basic-link[1]/text() = 'SID-001'"/>
        <x:expect label="second finding in table should link to 'finding2'"
            test="/fo:block[1]/fo:table[1]/fo:table-body[1]/fo:table-row[3]/fo:table-cell[1]/fo:block[1]/fo:basic-link[1]/@internal-destination/string()" select="'finding2'"/>
    </x:scenario>
    
    <x:scenario
        pending="Implicitly tested while matching 'generate_recommendations"
        label="Scenario for testing function recommendationsSummaryContent">
        <x:call
            template="recommendationsSummaryContent"/>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    <x:scenario
        label="Scenario for testing template with match 'generate_testteam">
        <x:context href="../source/report.xml" select="//generate_testteam"/>
        <x:expect
            label="Table with pentester names and bios">
            <fo:block><fo:table table-layout="fixed" width="100%" border-color="#444444"
                border-width="1pt" border-style="solid">
                <fo:table-column border-color="#444444" border-width="1pt" border-style="solid"
                    column-width="proportional-column-width(25)"/>
                <fo:table-column border-color="#444444" border-width="1pt" border-style="solid"
                    column-width="proportional-column-width(75)"/>
                <fo:table-body>
                    <fo:table-row border-color="#444444" border-width="1pt" border-style="solid">
                        <fo:table-cell start-indent="0" end-indent="0" padding-left="4pt"
                            padding-right="4pt" padding-top="3pt" padding-bottom="3pt">
                            <fo:block>FirstName LastName</fo:block>
                        </fo:table-cell>
                        <fo:table-cell start-indent="0" end-indent="0" padding-left="4pt"
                            padding-right="4pt" padding-top="3pt" padding-bottom="3pt">
                            <fo:block>Info</fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                    <fo:table-row border-color="#444444" border-width="1pt" border-style="solid">
                        <fo:table-cell start-indent="0" end-indent="0" padding-left="4pt"
                            padding-right="4pt" padding-top="3pt" padding-bottom="3pt">
                            <fo:block>Firstname Lastname</fo:block>
                        </fo:table-cell>
                        <fo:table-cell start-indent="0" end-indent="0" padding-left="4pt"
                            padding-right="4pt" padding-top="3pt" padding-bottom="3pt">
                            <fo:block>Info</fo:block>
                        </fo:table-cell>
                    </fo:table-row>
                </fo:table-body>
            </fo:table></fo:block>
        </x:expect>
    </x:scenario>
    <x:scenario pending="TODO test in quote context"
        label="Scenario for testing template with match 'generate_permission_parties">
        <x:context href="../source/quote.xml" select="//generate_permission_parties"/>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    <x:scenario
        pending="TODO test in quote context"
        label="Scenario for testing template with match 'generate_service_breakdown">
        <x:context/>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    <x:scenario
        pending="TODO test in quote context"
        label="Scenario for testing function calculateTotal">
        <x:call
            template="calculateTotal">
            <x:param
                name="denoms"
                select="'no_value'"
                tunnel="yes"/>
        </x:call>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    <x:scenario
        pending="TODO test in quote context"
        label="Scenario for testing function checkDenomination">
        <x:call
            template="checkDenomination">
            <x:param
                name="allDenominationsAreEqual"
                select="'no_value'"/>
            <x:param
                name="denoms"
                select="'no_value'"/>
        </x:call>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    <x:scenario
        pending="TODO test in quote context"
        label="Scenario for testing function calculatePersonDays">
        <x:call
            template="calculatePersonDays"/>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
    <x:scenario
        pending="TODO test in quote context"
        label="Scenario for testing function prettyMissingDecimal">
        <x:call
            template="prettyMissingDecimal">
            <x:param
                name="n"
                select="'no_value'"/>
        </x:call>
        <x:expect
            label="Not yet implemented"
            select="'Not yet implemented'"/>
    </x:scenario>
</x:description>
